{
  "openapi": "3.0.0",
  "info": {
    "title": "Save markdown content and chunked DALL.E images",
    "version": "1.0.0",
    "description": "Presenty save endpoint, it Save markdown content and chunked DALL.E images by taking Step 2 generated markdown content and DALL-E images and outputs presentationUrl and presentationId"
  },
  "servers": [
    {
      "url": "https://api.presenty.app"
    }
  ],
  "paths": {
    "/gpt/save": {
      "post": {
        "summary": "Save OpenAI GPT content",
        "tags": ["GPT"],
        "security": [{ "gptAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "markdownContent": {
                    "type": "string",
                    "description": "GPT generated markdown content"
                  },
                  "presentationName": {
                    "type": "string",
                    "description": "Presentation name"
                  },
                  "presentationId": {
                    "type": "number",
                    "description": "Optional presentation ID. Required only when updating existing content."
                  },
                  "dalleImages": {
                    "type": "array",
                    "description": "Array of Dall.E generated images. Each image is processed using the following steps and then used as a value in dalleImages: Step 1: The image is converted to a JPEG format with a resolution of 720px; Step 2: The JPEG image is then converted into a base64 encoded string; Step 3: This base64 string is split into a sequence of chunks, with each chunk containing 200 or less characters, placing its value in base64Chunks.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fileNameWithExtension": {
                          "type": "string",
                          "description": "GUID Filename of Dall.E generated image, including .jpeg extension.",
                          "example": "550e8400-e29b-41d4-a716-446655440000.jpeg"
                        },
                        "base64Chunks": {
                          "type": "array",
                          "description": "Array of chunked base64 encoded strings, each chunk is of 200 or less characters",
                          "items": {
                            "type": "string",
                            "example": "9j/4AAQSkZJRgABAQAAAQABAAD/7QCEUGhvdG9zaG9wIDMuMAA4QklNBAQAAAAAAGgcAigAYkZCTUQwYTAwMGE3MTAxMDAwMDQzMmEwMDAwMjU3MTAwMDBlODc3MDAwMDYxN2QwMDAwNmFiYzAwMDAzYzJjMDEwMDYyMzQwMTAwMGIzZTAxMDAzZjQ3MDEwMGQxMGYw7"
                          }
                        }
                      }
                    }
                  }
                },
                "required": ["markdownContent", "presentationName"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Content saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GPTResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GPTResponse": {
        "type": "object",
        "properties": {
          "presentationUrl": {
            "type": "string",
            "description": "URL of the generated presentation. This URL points to the location where the presentation is accessible.",
            "example": "https://example.com/presentation/12345"
          },
          "presentationId": {
            "type": "number",
            "description": "Unique identifier for the generated presentation. This ID can be used to reference or retrieve the presentation at a later time.",
            "example": 12345
          }
        },
        "required": ["presentationUrl"]
      }
    },
    "securitySchemes": {
      "gptAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "gpt-key"
      }
    }
  }
}