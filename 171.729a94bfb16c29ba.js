"use strict";(self.webpackChunkng_demos=self.webpackChunkng_demos||[]).push([[171],{8171:(f,d,i)=>{i.r(d),i.d(d,{default:()=>g});var r=i(9671);function u(t){return o.apply(this,arguments)}function o(){return(o=(0,r.Z)(function*(t){for(let e=0;e<t.length;e++)yield h(t[e],atob(t[e].getAttribute("data-chartjs")))})).apply(this,arguments)}function h(t,e){return l.apply(this,arguments)}function l(){return(l=(0,r.Z)(function*(t,e){if(t.chart){const n=t.chart.data.datasets;t.chart.data.datasets=[],t.chart.update(),t.style.visibility="hidden",setTimeout(function(s,a){s.chart.data.datasets=a,s.style.visibility="visible",s.chart.update()},200,t,n)}else if(e)try{const{Chart:n}=yield i.e(282).then(i.bind(i,8282));t.chart=null;const s=t.getContext("2d"),a=JSON.parse(e);t.chart=new n(s,{...a,data:{labels:null,datasets:[],...a.data},options:{responsive:!0,maintainAspectRatio:!1,...a.options}})}catch(n){console.error(n),t.textContent=n.toString()}else{const n="chartjs: data missing found for chart";console.warn(n),t.textContent=n}})).apply(this,arguments)}const c={id:"chartjs",init:function(t){return console.log("init"),t.addEventListener("ready",(0,r.Z)(function*(){const e=t.getCurrentSlide().querySelectorAll("canvas[data-chartjs]");yield u(e)})),t.addEventListener("slidechanged",(0,r.Z)(function*(){const e=t.getCurrentSlide().querySelectorAll("canvas[data-chartjs]");yield u(e)})),this}},g=()=>c}}]);